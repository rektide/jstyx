<?xml version="1.0" encoding="UTF-8"?>

<!--
    Document   : G-Rex-servlet.xml
    Created on : 06 June 2007, 17:59
    Author     : Jon
    Description:
        Configures the properties of the G-Rex servlet (see web.xml)
-->

<beans xmlns='http://www.springframework.org/schema/beans'
       xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
       xsi:schemaLocation='http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd'>
    
    <!-- Defines a configuration object that is used to configure this server.
         This object is created via GRexConfig.readConfig(), a static factory method -->
    <bean id="grexConfig" class="uk.ac.rdg.resc.grex.config.GRexConfig"
          factory-method="readConfig">
        <!-- We must set the path to the configuration file -->
        <constructor-arg><value>/path/goes/here</value></constructor-arg>
    </bean>
           
    <!-- Defines a Controller that will list the services hosted on this server -->
    <bean id="listServicesController" class="uk.ac.rdg.resc.grex.servlet.ListServicesController">
        <property name="supportedMethods" value="GET"/>
        <!-- Inject the configuration object into this controller -->
        <property name="grexConfig"><ref local="grexConfig"/></property>
    </bean>
    
    <!-- Maps request URLs to controllers -->
    <bean id="controllermap" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <!-- The file services.[xml,html] lists the services that are
                     visible to the logged-in user -->
                <prop key="/services.*">listServicesController</prop>
            </props>
        </property>
    </bean>
    
    <!-- Each Controller will return the name of a View that maps to a certain JSP.
         For example, if a Controller returns a View name "hello_xml", the 
         ViewResolver will display /WEB-INF/jsp/hello_xml.jsp. -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- We put the JSPs in /WEB-INF so that they are not directly visible 
             over the network -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Exception Handling: this ensures that all GRexExceptions are returned to 
         the user as an XML document, created by displayGRexException.jsp.
         Note that we don't have to register this anywhere as an exception handler
         because Spring automagically detects it. -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="uk.ac.rdg.resc.grex.exceptions.GRexException">displayGRexException</prop>
            </props>
        </property>
        <!-- If an unexpected error occurs (i.e. one that doesn't get expressed as
             a GRexException) we will handle it using displayDefaultException.jsp -->
        <property name="defaultErrorView" value="displayDefaultException"/>
    </bean>
    
</beans>
