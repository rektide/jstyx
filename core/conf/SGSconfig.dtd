<?xml version='1.0' encoding='UTF-8'?>

<!--
    TODO define vocabulary indentification
    PUBLIC ID: -//vendor//vocabulary//EN
    SYSTEM ID: http://server/path/SGSconfig.dtd
-->

<!-- Options for a SGS.  These are provided as key-value pairs.  The
     interpretation of these options is dependent upon
     the type of the SGS (see the <gridservice> tag).  For example, these options
     might be used to pass parameters to Condor.
-->
<!ELEMENT options (option*)>
<!ELEMENT option EMPTY>
<!ATTLIST option
    key CDATA #REQUIRED
    value CDATA #REQUIRED
    description CDATA #IMPLIED
  >

<!-- A parameter for a SGS (passed on the command-line to the executable).  For
           now, all parameter values will be plain strings.
     name: The name of the parameter (must not contain spaces)
     paramType: Type of the parameter: "switch", "flaggedOption" or "unflaggedOption" - see JSAP
     required: "yes" if a value for this parameter must be set.  Meaningless for switches.
           For other parameter types, setting required="yes" means that the
           parameter must contain a value (i.e. not just whitespace characters)
     flag: The command-line flag (single character) used to prefix
           the parameter value, e.g. "v".  Used in "switch" and "flaggedOption" only
     longFlag: (Optional) The long version of the command-line flag, e.g. "verbose"
     defaultValue: (Optional) default value for the parameter.  For switches, the
           defaults can only be "true" or "false".  For other parameter types,
           the default can be any string.
           If this is not specified, default values will either be "false" or the 
           empty string.
     greedy: (Optional) Only relevant for unflagged options.  If this is "yes",
           this parameter will consume all the remaining unflagged options on the 
           command line.  Only one greedy unflagged option is allowed.
     description: (Optional) short description of the parameter
     TODO: make parameter values strongly typed (e.g. Integers, Floats, Booleans and Strings)
-->
<!ELEMENT params (param*)>
<!ELEMENT param EMPTY>
<!ATTLIST param
    name CDATA #REQUIRED
    paramType (switch | flaggedOption | unflaggedOption) #REQUIRED
    required (yes | no) "no"
    flag CDATA #IMPLIED
    longFlag CDATA #IMPLIED
    defaultValue CDATA #IMPLIED
    greedy (yes | no) "no"
    description CDATA #IMPLIED
  >
 
<!--
    The inputs and outputs of the SGS (files and streams)
    type: Type of the input.  "stream" means an input stream that is read while
          the program is running.  "file" means an input file that must be present
          (i.e. uploaded) before the program starts.  "fileFromParam" is a file
          whose name is specified by a certain parameter.
    name: Name of the input.  For a stream, the only valid name is "stdin".
          For a file, this is the fixed name of the file as it will appear in the
          working directory of the executable.  For a "fileFromParam", this is
          the name of the parameter from whose value the name will be taken (so
          this must match exactly the name of one of the params specified above).
-->
<!ELEMENT inputs (input*)>
<!ELEMENT input EMPTY>
<!ATTLIST input
    type (stream | file | fileFromParam) "file"
    name CDATA #REQUIRED
 >
<!ELEMENT outputs (output*)>
<!ELEMENT output EMPTY>
<!ATTLIST output
    type (stream | file | fileFromParam) "file"
    name CDATA #REQUIRED
 >

<!-- A steerable parameter for an SGS (i.e. one whose value can be changed
     whilst the simulation is running) -->
<!ELEMENT steering (steerable*)>
<!ELEMENT steerable EMPTY>
<!ATTLIST steerable
    name CDATA #REQUIRED
    file CDATA #IMPLIED
    initialvalue CDATA #REQUIRED
  >
  
<!-- A free-text documentation file describing the SGS.  Any number of these
     can be given for an SGS. The name gives the name of the file as it will
     appear in the doc/ directory of the SGS. This name must be a valid filename
     and must not be "description" as this is reserved for the short description
     of the service. If the name is not given, it defaults to the last part
     of the location (i.e. ignoring any folder information).
     The location is the location of the file on the host filesystem.
     The location can also be a directory, in which case all files under this
     directory will be made visible in the same hierarchy.
     Documentation will be read-only. -->
<!ELEMENT docs (doc*)>
<!ELEMENT doc EMPTY>
<!ATTLIST doc
    location CDATA #REQUIRED
    name CDATA #IMPLIED
  >
  
<!-- Element describing service data -->
<!ELEMENT serviceData (serviceDataElement*)>
<!ELEMENT serviceDataElement EMPTY>
<!ATTLIST serviceDataElement
    name CDATA #REQUIRED
    minUpdateInterval CDATA "2.0"
    file CDATA #IMPLIED
  >

<!-- Element that defines a Styx Grid Service -->
<!-- The description of the service will automatically appear as a file called
     "description" in the docs/ directory of the SGS. -->
<!ELEMENT gridservice (options?, params?, inputs?, outputs?, serviceData?, steering?, docs?)>
<!ATTLIST gridservice
    name CDATA #REQUIRED
    command CDATA #REQUIRED
    type (local | condor) "local"
    description CDATA #IMPLIED
  >
  
<!--- The gridservices tag can contain zero or more gridservices -->
<!ELEMENT gridservices (gridservice)*>

<!ELEMENT server EMPTY>
<!-- TODO: any way to force port to be a positive integer? -->
<!ATTLIST server
    address CDATA #IMPLIED
    port CDATA "9092"
    cacheLocation CDATA #IMPLIED
    securityContext CDATA #IMPLIED
  >

<!ELEMENT sgs (server?, gridservices)>
